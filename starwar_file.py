# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YAyEO-60qhRyFlDCi2SIhw3EjgrLb4kA
"""

import pandas as pd

# Load the dataset
url = 'https://github.com/DavidRomoff/DataSets/raw/main/starwars.csv'
df = pd.read_csv(url, index_col=0)

# 1. List the different homeworlds
print("Unique Homeworlds:\n", df['homeworld'].unique())

# 2. Count the number of different homeworlds
print("\nNumber of Different Homeworlds:", df['homeworld'].nunique())

# 3. List unique eye colors
print("\nUnique Eye Colors:\n", df['eye_color'].unique())

# 4. Count occurrences of each eye color
print("\nEye Color Counts:\n", df['eye_color'].value_counts())

# 5. Count species on Naboo
naboo_species = df[df['homeworld'] == 'Naboo']['species'].value_counts()
print("\nSpecies count on Naboo:\n", naboo_species)

# 6. Count population per homeworld (sorted in descending order)
homeworld_counts = df['homeworld'].value_counts().sort_values(ascending=False)
print("\nNumber of people per homeworld:\n", homeworld_counts)

# 7. Count species per homeworld (sorted alphabetically)
species_per_homeworld = df.groupby(['homeworld', 'species']).size().unstack(fill_value=0)
print("\nSpecies count per homeworld:\n", species_per_homeworld.sort_index())

# 8. Create BMI field
df['BMI'] = df['mass'] / ((df['height'] / 100) ** 2)

# 9. Display name and BMI sorted in descending order
print("\nCharacters sorted by descending BMI:\n", df[['name', 'BMI']].sort_values('BMI', ascending=False))

# 10. Compute the average BMI for each homeworld and eye color, sorted accordingly
average_BMI = df.groupby(['homeworld', 'eye_color'])['BMI'].mean().reset_index()
average_BMI_sorted = average_BMI.sort_values(by=['homeworld', 'eye_color', 'BMI'], ascending=[True, True, False])
print("\nAverage BMI per homeworld and eye color:\n", average_BMI_sorted)